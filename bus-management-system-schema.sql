DROP TABLE IF EXISTS payment CASCADE;
DROP TABLE IF EXISTS ticket CASCADE;
DROP TABLE IF EXISTS booking CASCADE;
DROP TABLE IF EXISTS customer CASCADE;
DROP TABLE IF EXISTS trip_assignment CASCADE;
DROP TABLE IF EXISTS employee CASCADE;
DROP TABLE IF EXISTS trip CASCADE;
DROP TABLE IF EXISTS route_stop CASCADE;
DROP TABLE IF EXISTS route CASCADE;
DROP TABLE IF EXISTS station CASCADE;
DROP TABLE IF EXISTS maintenance_log CASCADE;
DROP TABLE IF EXISTS vehicle CASCADE;
DROP TABLE IF EXISTS vehicle_type CASCADE;
DROP TABLE IF EXISTS account CASCADE;

-- Drop enum types
DROP TYPE IF EXISTS vehicle_status CASCADE;
DROP TYPE IF EXISTS maintenance_log_status CASCADE;
DROP TYPE IF EXISTS trip_status CASCADE;
DROP TYPE IF EXISTS role_in_trip CASCADE;
DROP TYPE IF EXISTS payment_method CASCADE;
DROP TYPE IF EXISTS payment_status CASCADE;
DROP TYPE IF EXISTS booking_status CASCADE;
DROP TYPE IF EXISTS role CASCADE;

-- 1. Enum types
CREATE TYPE vehicle_status AS ENUM ('active','maintenance','inactive');
CREATE TYPE maintenance_log_status AS ENUM ('scheduled','inProgress','completed');
CREATE TYPE trip_status AS ENUM ('onTime','delayed','cancelled');
CREATE TYPE role_in_trip AS ENUM ('driver','assistant');
CREATE TYPE payment_method AS ENUM ('cash','eWallet','bankTransfer');
CREATE TYPE payment_status AS ENUM ('success','failed');
CREATE TYPE booking_status AS ENUM ('confirmed','pendingPayment','cancelled');
CREATE TYPE role AS ENUM ('admin','staff','customer');

CREATE TABLE vehicle_type (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  type_name varchar(50) NOT NULL,
  description text,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE vehicle (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  license_plate varchar(15) UNIQUE NOT NULL,
  vehicle_type_id integer,
  brand varchar(50),
  model varchar(50),
  year_manufactured integer,
  seat_capacity integer NOT NULL,
  manufacturer varchar,
  status vehicle_status NOT NULL,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE maintenance_log (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  vehicle_id integer NOT NULL,
  maintenance_type varchar(100),
  schedule_date date,
  completion_date date,
  cost integer,
  note text,
  status maintenance_log_status,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE station (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  station_name varchar(100) NOT NULL,
  address varchar(255),
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE route (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  route_name varchar(255) NOT NULL,
  start_station_id integer NOT NULL,
  end_station_id integer NOT NULL,
  distance double precision,
  standard_duration integer,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE route_stop (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  route_id integer NOT NULL,
  station_id integer NOT NULL,
  stop_order integer NOT NULL,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE trip (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  route_id integer NOT NULL,
  vehicle_id integer NOT NULL,
  departure_time timestamptz NOT NULL,
  arrival_time timestamptz NOT NULL,
  status trip_status NOT NULL,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE employee (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid UNIQUE,
  full_name varchar(100) NOT NULL,
  email varchar(255),
  phone_number varchar(15) UNIQUE,
  license_number varchar(20) UNIQUE,
  license_expiry date,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE trip_assignment (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  trip_id integer NOT NULL,
  employee_id integer NOT NULL,
  role_in_trip role_in_trip NOT NULL,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE customer (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id uuid UNIQUE,
  full_name varchar(100) NOT NULL,
  phone_number varchar(15) UNIQUE,
  email varchar(255),
  loyalty_points integer DEFAULT 0,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE booking (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  customer_id integer NOT NULL,
  trip_id integer NOT NULL,
  booking_time timestamptz NOT NULL,
  total_amount integer NOT NULL,
  status booking_status NOT NULL,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE ticket (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  booking_id integer NOT NULL,
  seat_number varchar(5) NOT NULL,
  price integer NOT NULL,
  qrcode varchar,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

CREATE TABLE payment (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  booking_id integer NOT NULL,
  payment_method payment_method NOT NULL,
  amount integer NOT NULL,
  transaction_time timestamptz NOT NULL,
  status payment_status NOT NULL,
  created_at timestamptz DEFAULT now() NOT NULL,
  updated_at timestamptz DEFAULT now() NOT NULL
);

-- Foreign keys
ALTER TABLE vehicle ADD FOREIGN KEY (vehicle_type_id) REFERENCES vehicle_type (id);
ALTER TABLE maintenance_log ADD FOREIGN KEY (vehicle_id) REFERENCES vehicle (id);
ALTER TABLE route ADD FOREIGN KEY (start_station_id) REFERENCES station (id);
ALTER TABLE route ADD FOREIGN KEY (end_station_id) REFERENCES station (id);
ALTER TABLE route_stop ADD FOREIGN KEY (route_id) REFERENCES route (id);
ALTER TABLE route_stop ADD FOREIGN KEY (station_id) REFERENCES station (id);
ALTER TABLE trip ADD FOREIGN KEY (route_id) REFERENCES route (id);
ALTER TABLE trip ADD FOREIGN KEY (vehicle_id) REFERENCES vehicle (id);
ALTER TABLE trip_assignment ADD FOREIGN KEY (trip_id) REFERENCES trip (id);
ALTER TABLE trip_assignment ADD FOREIGN KEY (employee_id) REFERENCES employee (id);
ALTER TABLE booking ADD FOREIGN KEY (customer_id) REFERENCES customer (id);
ALTER TABLE booking ADD FOREIGN KEY (trip_id) REFERENCES trip (id);
ALTER TABLE ticket ADD FOREIGN KEY (booking_id) REFERENCES booking (id);
ALTER TABLE payment ADD FOREIGN KEY (booking_id) REFERENCES booking (id);
